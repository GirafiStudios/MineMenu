plugins {
    id 'multiloader-loader'
    id 'net.minecraftforge.gradle' version '[6.0.24,6.2)'
}

base {
    archivesName = "${mod_name}-forge-${minecraft_version}"
}

version = "${version}${buildnumber}"

minecraft {
    mappings channel: 'official', version: minecraft_version

    copyIdeResources = true //Calls processResources when in dev

    if (file('src/main/resources/META-INF/accesstransformer.cfg').exists()) {
        accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    }

    runs {
        client {
            workingDirectory project.file('run')
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'Client'
            mods {
                modClientRun {
                    source sourceSets.main
                    source project(":common").sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'Server'
            mods {
                modServerRun {
                    source sourceSets.main
                    source project(":common").sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            ideaModule "${rootProject.name}.${project.name}.main"
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            taskName 'Data'
            mods {
                modDataRun {
                    source sourceSets.main
                    source project(":common").sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources.srcDir 'src/generated/resources'

sourceSets.each {
    def dir = layout.buildDirectory.dir("sourcesSets/$it.name")
    it.output.resourcesDir = dir
    it.java.destinationDirectory = dir
}

jarJar.enable()
dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

	implementation fg.deobf(group: 'mysticdrew', name: 'common-networking-forge', version: "${common_networking}-${minecraft_version}")	{ transitive false }
    jarJar group: 'mysticdrew', name: 'common-networking-forge', version: '[1.0.10, 5.0.0)'
    implementation fg.deobf("fuzs.forgeconfigapiport:forgeconfigapiport-forge:${forge_config_api_port}")
    jarJar group: 'fuzs.forgeconfigapiport', name: 'forgeconfigapiport-forge', version: '[21.0.0, 30.0.0)'
    //implementation fg.deobf("com.blamejared.controlling:Controlling-forge-${minecraft_version}:${controlling}")
    //implementation fg.deobf("com.blamejared.searchables:Searchables-forge-${minecraft_version}:${searchables}")

    // Hack fix for now, force jopt-simple to be exactly 5.0.4 because Mojang ships that version, but some transitive dependencies request 6.0+ 
    implementation('net.sf.jopt-simple:jopt-simple:5.0.4') { version { strictly '5.0.4' } }
}

jar.finalizedBy('reobfJar')