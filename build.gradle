plugins {
    id 'idea'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

repositories {
  maven { 
    name = "Controlling"
    url = "https://maven.blamejared.com" 
  }
}

ext.buildnumber=""
if (System.getenv().BUILD_NUMBER) {
    ext.buildnumber = ".B" + System.getenv().BUILD_NUMBER
}

version = "${minecraft_version}-${mod_version}${buildnumber}"
group = "dmillerw.menu"

base {
    archivesName = "MineMenu"
}

minecraft {
    mappings channel: 'official', version: project.minecraft_version
	accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
	enableIdeaPrepareRuns = true
	copyIdeResources = true
	generateRunFolders = true

    runs {
        client {
            workingDirectory project.file('run')
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
			
            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    compileOnly fg.deobf("com.blamejared.controlling:Controlling-forge-${minecraft_version}:${controlling_version}")
    runtimeOnly fg.deobf("com.blamejared.controlling:Controlling-forge-${minecraft_version}:${controlling_version}")
    implementation fg.deobf("com.blamejared.searchables:Searchables-forge-${minecraft_version}:${searchables_version}")
}

def resourceTargets = ['META-INF/mods.toml']
def replaceProperties = [
        minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
        forge_version: forge_version, forge_version_range: forge_version_range,
        loader_version_range: loader_version_range,
        mod_version: mod_version,
]

processResources {
    inputs.properties replaceProperties
    replaceProperties.put 'project', project

    filesMatching(resourceTargets) {
        expand replaceProperties
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}